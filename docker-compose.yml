version: '3'
services:

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.12-2.2.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    expose:
      - "9092"
      - "29092"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    links:
      - zookeeper

#  app:
#    image: nacho270/spring-int-testing-demo:latest
#    environment:
#      spring.datasource.url: jdbc:mysql://mysql:3306/spring-int-testing-demo
#      spring.data.mongodb.host: mongo
#      spring.kafka.bootstrap-servers: kafka:9092
#    ports:
#      - 8080:8080
#    links:
#      - mysql
#      - mongo
#      - kafka